@page "/createcomment"
@using BookingEksamenMAUI.Helpers.Comments
@using BookingEksamenMAUI.Models
@inject ICommentAPIHelper commentAPIHelper

<h1>Comment</h1>

<h1>Leave us a comment</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>            
            <div class="form-group">
                @* <label for="LastName" class="col-sm-2 control-label">LastName</label> *@
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="LastName">
                </div>
            </div>
            <div class="form-group">
                @* <label for="FirstMidName" class="col-sm-2 control-label">FirstMidName</label> *@
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="FirstMidName">
                </div>
            </div>            
            <div class="form-group">
                @* <label for="EmailAddress" class="col-sm-2 control-label">EmailAddress</label> *@
                <div class="col-sm-10">
                    <input type="text" class="form-control" name="EmailAddress">
                </div>
            </div>            
            <div class="form-group">
                @* <label for="CommentText" class="col-sm-2 control-label">CommentText</label> *@
                @* @Html.TextAreaFor(model => model.CommentText, new { @class = "form-control", @rows = 4 }) *@
                <input asp-for="CommentText" class="form-control" />
                <span asp-validation-for="CommentText" class="text-danger"></span>
            </div>
            <p></p>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" asp-page-handler="Create" />                
            </div>
        </form>
    </div>
</div>

<div>
    <p>[<a class="link text-dark" href="">Home</a>]</p>
</div>


@{

    @functions {        
        public void Create(Comment comment)
        {            
            commentAPIHelper.CreateCommentAsync(comment);
        }        
    }
}
